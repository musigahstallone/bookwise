// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A book recommendation AI agent.
 *
 * - getBookRecommendation - A function that handles the book recommendation process.
 * - BookRecommendationInput - The input type for the getBookRecommendation function.
 * - BookRecommendationOutput - The return type for the getBookRecommendation function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const BookRecommendationInputSchema = z.object({
  userInput: z
    .string()
    .describe(
      'The description of the desired book or current mood of the user.'
    ),
  bookDescriptions: z.array(
    z.object({
      title: z.string(),
      description: z.string(),
    })
  ).describe('An array of book descriptions to use for recommendations.'),
});
export type BookRecommendationInput = z.infer<typeof BookRecommendationInputSchema>;

const BookRecommendationOutputSchema = z.object({
  recommendedBooks: z.array(
    z.object({
      title: z.string().describe('The title of the recommended book.'),
      reason: z.string().describe('The reason why this book is recommended.'),
    })
  ).describe('The recommended books based on the user input.'),
});
export type BookRecommendationOutput = z.infer<typeof BookRecommendationOutputSchema>;

export async function getBookRecommendation(input: BookRecommendationInput): Promise<BookRecommendationOutput> {
  return bookRecommendationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'bookRecommendationPrompt',
  input: {schema: BookRecommendationInputSchema},
  output: {schema: BookRecommendationOutputSchema},
  prompt: `You are a book recommendation expert. A user will describe their current mood, or the type of book they are looking for. You will suggest books from the available catalog that best fit their needs.

User Input: {{{userInput}}}

Available Books:
{{#each bookDescriptions}}
Title: {{this.title}}
Description: {{this.description}}
{{/each}}

Based on the user input, recommend books from the available catalog and explain why each book is recommended.`,  
});

const bookRecommendationFlow = ai.defineFlow(
  {
    name: 'bookRecommendationFlow',
    inputSchema: BookRecommendationInputSchema,
    outputSchema: BookRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
